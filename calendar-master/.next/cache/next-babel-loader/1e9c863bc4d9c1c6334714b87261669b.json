{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//const host = \"http://localhost:3000/api\";\nvar url = function url(path) {\n  return \"/api/\".concat(path);\n};\n\nvar header = {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\nexport var get = function get(path) {\n  var resp, result;\n  return _regeneratorRuntime.async(function get$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url(path)));\n\n        case 2:\n          resp = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(resp.json());\n\n        case 5:\n          result = _context.sent;\n          return _context.abrupt(\"return\", result);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var post = function post(path, body) {\n  var options, resp, result;\n  return _regeneratorRuntime.async(function post$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          options = _objectSpread({}, header, {\n            method: \"POST\",\n            body: JSON.stringify(body)\n          });\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url(path), options));\n\n        case 3:\n          resp = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(resp.json());\n\n        case 6:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", result);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteRequest = function deleteRequest(path) {\n  var options;\n  return _regeneratorRuntime.async(function deleteRequest$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          options = {\n            method: \"DELETE\"\n          };\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url(path), options));\n\n        case 3:\n          return _context3.abrupt(\"return\");\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/qcs6651/Desktop/shizuki/calen/calendar-master/src/services/api.js"],"names":["url","path","header","headers","get","fetch","resp","json","result","post","body","options","method","JSON","stringify","deleteRequest"],"mappings":";;;;;;;AAAA;AACA,IAAMA,GAAG,GAAG,SAANA,GAAM,CAAAC,IAAI;AAAA,wBAAYA,IAAZ;AAAA,CAAhB;;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AADE,CAAf;AAOA,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAMH,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACII,KAAK,CAACL,GAAG,CAACC,IAAD,CAAJ,CADT;;AAAA;AACTK,UAAAA,IADS;AAAA;AAAA,2CAEMA,IAAI,CAACC,IAAL,EAFN;;AAAA;AAETC,UAAAA,MAFS;AAAA,2CAIRA,MAJQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ;AAOP,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAOR,IAAP,EAAaS,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,UAAAA,OADU,qBACKT,MADL;AACaU,YAAAA,MAAM,EAAE,MADrB;AAC6BF,YAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;AADnC;AAAA;AAAA,2CAGGL,KAAK,CAACL,GAAG,CAACC,IAAD,CAAJ,EAAYU,OAAZ,CAHR;;AAAA;AAGVL,UAAAA,IAHU;AAAA;AAAA,2CAKKA,IAAI,CAACC,IAAL,EALL;;AAAA;AAKVC,UAAAA,MALU;AAAA,4CAOTA,MAPS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;AAUP,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAMd,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBU,UAAAA,OADmB,GACT;AAAEC,YAAAA,MAAM,EAAE;AAAV,WADS;AAAA;AAAA,2CAGnBP,KAAK,CAACL,GAAG,CAACC,IAAD,CAAJ,EAAYU,OAAZ,CAHc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB","sourcesContent":["//const host = \"http://localhost:3000/api\";\r\nconst url = path => `/api/${path}`;\r\n\r\nconst header = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n};\r\n\r\n\r\nexport const get = async path => {\r\n    const resp = await fetch(url(path));\r\n    const result = await resp.json();\r\n\r\n    return result;\r\n};\r\n\r\nexport const post = async (path, body) => {\r\n    const options = { ...header, method: \"POST\", body: JSON.stringify(body) };\r\n\r\n    const resp = await fetch(url(path), options);\r\n\r\n    const result = await resp.json();\r\n\r\n    return result;\r\n};\r\n\r\nexport const deleteRequest = async path => {\r\n    const options = { method: \"DELETE\" };\r\n    \r\n    await fetch(url(path), options);\r\n\r\n    //204 no Contentが帰ってくるので成功の場合何もreturnしない\r\n    return;\r\n};"]},"metadata":{},"sourceType":"module"}