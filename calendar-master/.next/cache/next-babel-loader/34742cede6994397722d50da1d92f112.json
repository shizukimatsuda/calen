{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//const host = \"http://localhost:3000/api\";\nconst url = path => `/api/${path}`;\n\nconst header = {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\nexport const get = async path => {\n  const resp = await fetch(url(path));\n  const result = await resp.json();\n  return result;\n};\nexport const post = async (path, body) => {\n  const options = _objectSpread({}, header, {\n    method: \"POST\",\n    body: JSON.stringify(body)\n  });\n\n  const resp = await fetch(url(path), options);\n  const result = await resp.json();\n  return result;\n};\nexport const deleteRequest = async (path, body) => {\n  const options = {\n    method: \"DELELTE\"\n  };\n  await fetch(url(path), options); //204 no Contentが帰ってくるので成功の場合何もreturnしない\n\n  return;\n};","map":{"version":3,"sources":["C:/Users/qcs6651/Desktop/shizuki/calen/calendar-master/src/services/api.js"],"names":["url","path","header","headers","get","resp","fetch","result","json","post","body","options","method","JSON","stringify","deleteRequest"],"mappings":";;;;;;AAAA;AACA,MAAMA,GAAG,GAAGC,IAAI,IAAK,QAAOA,IAAK,EAAjC;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AADE,CAAf;AAOA,OAAO,MAAMC,GAAG,GAAG,MAAMH,IAAN,IAAc;AAC7B,QAAMI,IAAI,GAAG,MAAMC,KAAK,CAACN,GAAG,CAACC,IAAD,CAAJ,CAAxB;AACA,QAAMM,MAAM,GAAG,MAAMF,IAAI,CAACG,IAAL,EAArB;AAEA,SAAOD,MAAP;AACH,CALM;AAOP,OAAO,MAAME,IAAI,GAAG,OAAOR,IAAP,EAAaS,IAAb,KAAsB;AACtC,QAAMC,OAAO,qBAAQT,MAAR;AAAgBU,IAAAA,MAAM,EAAE,MAAxB;AAAgCF,IAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAAtC,IAAb;;AAEA,QAAML,IAAI,GAAG,MAAMC,KAAK,CAACN,GAAG,CAACC,IAAD,CAAJ,EAAYU,OAAZ,CAAxB;AAEA,QAAMJ,MAAM,GAAG,MAAMF,IAAI,CAACG,IAAL,EAArB;AAEA,SAAOD,MAAP;AACH,CARM;AAUP,OAAO,MAAMQ,aAAa,GAAG,OAAOd,IAAP,EAAaS,IAAb,KAAsB;AAC/C,QAAMC,OAAO,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAhB;AAEA,QAAMN,KAAK,CAACN,GAAG,CAACC,IAAD,CAAJ,EAAYU,OAAZ,CAAX,CAH+C,CAK/C;;AACA;AACH,CAPM","sourcesContent":["//const host = \"http://localhost:3000/api\";\r\nconst url = path => `/api/${path}`;\r\n\r\nconst header = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n};\r\n\r\n\r\nexport const get = async path => {\r\n    const resp = await fetch(url(path));\r\n    const result = await resp.json();\r\n\r\n    return result;\r\n};\r\n\r\nexport const post = async (path, body) => {\r\n    const options = { ...header, method: \"POST\", body: JSON.stringify(body) };\r\n\r\n    const resp = await fetch(url(path), options);\r\n\r\n    const result = await resp.json();\r\n\r\n    return result;\r\n};\r\n\r\nexport const deleteRequest = async (path, body) => {\r\n    const options = { method: \"DELELTE\" };\r\n\r\n    await fetch(url(path), options);\r\n\r\n    //204 no Contentが帰ってくるので成功の場合何もreturnしない\r\n    return;\r\n};"]},"metadata":{},"sourceType":"module"}